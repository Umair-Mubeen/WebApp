# Generated by Django 5.0.7 on 2024-08-21 15:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DispositionList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=255, null=True)),
                ('Designation', models.CharField(blank=True, max_length=255, null=True)),
                ('BPS', models.CharField(blank=True, max_length=255, null=True)),
                ('ZONE', models.CharField(blank=True, max_length=255, null=True)),
                ('Date_of_Birth', models.CharField(blank=True, max_length=255, null=True)),
                ('CNIC_No', models.CharField(blank=True, max_length=255, null=True)),
                ('Date_of_Entry_into_Govt_Service', models.CharField(blank=True, max_length=255, null=True)),
                ('Date_of_Promotion', models.CharField(blank=True, max_length=255, null=True)),
                ('Date_of_Retirement', models.CharField(blank=True, max_length=255, null=True)),
                ('Date_of_Posting_in_rto_ii_Karachi', models.CharField(blank=True, max_length=255, null=True)),
                ('Date_of_Posting_in_Zone', models.CharField(blank=True, max_length=255, null=True)),
                ('Personal_No', models.CharField(blank=True, max_length=255, null=True)),
                ('Cell_No', models.CharField(blank=True, max_length=255, null=True)),
                ('Education', models.CharField(blank=True, max_length=255, null=True)),
                ('Domicile', models.CharField(blank=True, max_length=255, null=True)),
                ('Residential_Address', models.CharField(blank=True, max_length=255, null=True)),
                ('Basic_Pay', models.CharField(blank=True, max_length=255, null=True)),
                ('Personal_Pay', models.CharField(blank=True, max_length=255, null=True)),
                ('Total', models.CharField(blank=True, max_length=255, null=True)),
                ('Email_Address', models.CharField(blank=True, max_length=255, null=True)),
                ('Remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_charge', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_charge_lro', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('Casual Leave', 'Casual Leave'), ('Earned Leave', 'Earned Leave'), ('Ex-Pakistan Leave', 'Ex-Pakistan Leave')], max_length=50)),
                ('leave_start_date', models.DateField()),
                ('leave_end_date', models.DateField()),
                ('leave_document', models.FileField(blank=True, null=True, upload_to='leave_documents/')),
                ('reason', models.TextField()),
                ('days_granted', models.PositiveIntegerField(default=0)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WebApp.dispositionlist')),
            ],
        ),
        migrations.CreateModel(
            name='TransferPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_unit', models.CharField(blank=True, max_length=255)),
                ('new_unit', models.CharField(blank=True, max_length=255)),
                ('order_number', models.IntegerField(default=0)),
                ('transfer_date', models.DateField()),
                ('reason_for_transfer', models.TextField(blank=True, null=True)),
                ('order_approved_by', models.CharField(max_length=255)),
                ('transfer_document', models.FileField(default=None, max_length=250, null=True, upload_to='transfer_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WebApp.dispositionlist')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userType', models.CharField(choices=[('ZONE', 'Zone-I'), ('ZONE', 'Zone-II'), ('ZONE', 'Zone-III'), ('ZONE', 'Zone-IV'), ('ZONE', 'Zone-V')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
